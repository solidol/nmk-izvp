// question: 0  name: Switch category to $course$/top/Опитування 6-02
$CATEGORY: $course$/top/Опитування 6-02


::op-06-02-01::Архітектурний шаблон MVC має включати наступні компоненти{
	=Модель, Представлення, Контролер;
	~Модель, Пакетний менеджер, Контролер;
	~Модель, Представлення, Простір імен;
	~Модель, Вміст, Контроллер;
}


::op-06-02-02::Архітектурний шаблон MVC має включати наступні компоненти{
	=Модель, Представлення, Контролер;
	~Модель, Пакетний менеджер, Контролер;
	~Модель, Представлення, Простір імен;
	~Модель, Субмодель, Контроллер;
}


::op-06-02-03::Архітектурний шаблон MVC має включати наступні компоненти{
	=Модель, Представлення, Контролер;
	~Модель, Зв'язки, Контролер;
	~Модель, Представлення, Простір імен;
	~Модель, Субмодель, Контроллер;
}


::op-06-02-04::Оберіть функцію, яка не належить Моделі{
	=обробка запитів користувача
	~вставновлення зв'язків з іншими моделями
	~отримання даних зі сховища даних
	~збереження та видалення даних зі сховища
}


::op-06-02-05::Оберіть функцію, яка не належить Моделі{
	=перетворення Виду на HTML-сторінку
	~вставновлення зв'язків з іншими моделями
	~отримання даних зі сховища даних
	~збереження та видалення даних зі сховища
}


::op-06-02-06::Оберіть функцію, яка не належить Моделі{
	=визначення структури таблиці бази даних
	~вставновлення зв'язків з іншими моделями
	~попередня обробка даних
	~збереження та видалення даних зі сховища
}


::op-06-02-07::Оберіть функцію, яка належить Моделі{
	=вставновлення зв'язків з іншими моделями
	~визначення структури таблиці бази даних
	~перетворення Виду на HTML-сторінку
	~обробка запитів користувача
}


::op-06-02-08::Оберіть функцію, яка належить Моделі{
	=збереження та видалення даних зі сховища
	~визначення структури таблиці бази даних
	~перетворення Виду на HTML-сторінку
	~обробка запитів користувача
}


::op-06-02-09::Оберіть функцію, яка не належить Контролеру{
	=збереження та видалення даних зі сховища
	~обробка запиту користувача
	~передача даних від Моделі до Виду
	~отримання параметрів з рядку запиту (маршруту)
}


::op-06-02-10::Оберіть функцію, яка не належить Контролеру{
	=вставновлення зв'язків з іншими моделями
	~обробка запиту користувача
	~передача даних від Моделі до Виду
	~отримання параметрів з рядку запиту (маршруту)
}


::op-06-02-11::Оберіть функцію, яка не належить Контролеру{
	=розміщення змінних в HTML-шаблоні
	~обробка запиту користувача
	~передача даних від Моделі до Виду
	~отримання параметрів з рядку запиту (маршруту)
}

::op-06-02-12::Оберіть функцію, яка належить Контролеру{
	=передача даних від Моделі до Виду
	~розміщення змінних в HTML-шаблоні
	~вставновлення зв'язків з іншими моделями
	~збереження та видалення даних зі сховища
}

::op-06-02-13::Оберіть функцію, яка належить Контролеру{
	=отримання параметрів з рядку запиту (маршруту)
	~розміщення змінних в HTML-шаблоні
	~вставновлення зв'язків з іншими моделями
	~збереження та видалення даних зі сховища
}

::op-06-02-14::Який HTTP-метод краще використовувати для демонстрації переліку записів?{
	=GET
	~POST
	~HEAD
	~PATCH
}

::op-06-02-15::Який HTTP-метод краще використовувати для демонстрації переліку записів?{
	=GET
	~POST
	~PUT
	~PATCH
}

::op-06-02-16::Який HTTP-метод краще використовувати для демонстрації одного запису?{
	=GET
	~POST
	~HEAD
	~PATCH
}

::op-06-02-17::Який HTTP-метод краще використовувати для збереження нового запису?{
	=POST
	~GET
	~HEAD
	~PATCH
}

::op-06-02-18::Laravel це фреймворк заснований на архітектурному шаблоні{
	=MVC
	~CSV
	~дворівневому шаблоні
	~NTFS
}

::op-06-02-19::Laravel це фреймворк заснований на архітектурному шаблоні{
	=MVC
	~CSV
	~дворівневому шаблоні
	~FAT
}

::op-06-02-20::Оберіть функцію, яка належить Виду (представленню){
	=розміщення змінних в HTML-шаблоні
	~отримання параметрів з рядку запиту (маршруту)
	~вставновлення зв'язків з іншими моделями
	~збереження та видалення даних зі сховища
}

::op-06-02-21::Оберіть функцію, яка належить Виду (представленню){
	=розміщення змінних в HTML-шаблоні
	~отримання параметрів з рядку запиту (маршруту)
	~вставновлення зв'язків з іншими моделями
	~обробка запиту користувача
}

::op-06-02-22::Задача файлу міграції у Laravel{
	=описати структуру таблиці БД
	~описати бізнес-логіку моделі
	~описати перелік представлень
	~описати порядок перенесення файлів на хостинг
}

::op-06-02-23::Задача файлу міграції у Laravel{
	=описати структуру таблиці БД
	~описати бізнес-логіку моделі
	~описати перелік методів Моделі
	~описати порядок перенесення файлів на хостинг
}

::op-06-02-24::Задача файлу міграції у Laravel{
	=описати структуру таблиці БД
	~описати бізнес-логіку моделі
	~описати перелік методів Моделі
	~описати взаємодію проєкту з СКВ Git
}

::op-06-02-25::Клас Route в Laravel відповідає за{
	=визначення маршрутів
	~визначення HTML-шаблонів
	~визначення Моделей
	~визначення Контролерів
}

::op-06-02-26::Клас Route в Laravel відповідає за{
	=визначення маршрутів
	~визначення міграцій
	~визначення Моделей
	~визначення Контролерів
}

